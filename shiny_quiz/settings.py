"""
Django settings for shiny_quiz project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
from dotenv import load_dotenv
import secrets

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', secrets.token_urlsafe(50))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_DEBUG', 'False').lower() == 'true'

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    # Third-party apps
    'django_bootstrap5',
    'widget_tweaks',  # Required by allauth_ui
    'slippers',       # Required by allauth_ui
    'allauth_ui',     # Must come before allauth to override templates
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'django_ckeditor_5',
    
    # Local apps
    'core',
    'accounts',
    'quiz',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'shiny_quiz.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.theme_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'shiny_quiz.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'sqlite:///db.sqlite3'),
        conn_max_age=600
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# CKEditor 5 settings
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'imageUpload',
        ],
    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': [
            'heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
            'code', 'subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
            'bulletedList', 'numberedList', 'todoList', '|', 'blockQuote', 'imageUpload', '|',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
            'insertTable',
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative', 'imageTitle', '|', 'imageStyle:alignLeft', 'imageStyle:alignRight',
                'imageStyle:alignCenter', 'imageStyle:side', '|'
            ],
            'styles': [
                'full', 'side', 'alignLeft', 'alignRight', 'alignCenter',
            ]
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties'
            ],
            'tableProperties': {
                'borderColors': [
                    { 'color': 'hsl(0, 0%, 90%)', 'label': 'Light grey' },
                    { 'color': 'hsl(0, 0%, 50%)', 'label': 'Grey' },
                    { 'color': 'hsl(0, 0%, 0%)', 'label': 'Black' }
                ],
                'backgroundColors': [
                    { 'color': 'hsl(120, 75%, 60%)', 'label': 'Green' },
                    { 'color': 'hsl(240, 75%, 60%)', 'label': 'Blue' },
                    { 'color': 'hsl(0, 75%, 60%)', 'label': 'Red' }
                ]
            },
            'tableCellProperties': {
                'borderColors': [
                    { 'color': 'hsl(0, 0%, 90%)', 'label': 'Light grey' },
                    { 'color': 'hsl(0, 0%, 50%)', 'label': 'Grey' },
                    { 'color': 'hsl(0, 0%, 0%)', 'label': 'Black' }
                ],
                'backgroundColors': [
                    { 'color': 'hsl(120, 75%, 60%)', 'label': 'Green' },
                    { 'color': 'hsl(240, 75%, 60%)', 'label': 'Blue' },
                    { 'color': 'hsl(0, 75%, 60%)', 'label': 'Red' }
                ]
            }
        },
        'heading': {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        },
        'htmlSupport': {
            'allow': [
                {
                    'name': 'div',
                    'attributes': True,
                    'classes': True,
                    'styles': True
                }
            ]
        },
    },
    'list': {
        'properties': {
            'styles': True,
            'startIndex': True,
            'reversed': True
        }
    }
}

# Path where CKEditor 5 media files will be uploaded
CKEDITOR_5_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
CKEDITOR_5_UPLOAD_PATH = "uploads/ckeditor5/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django AllAuth settings
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_LOGIN_METHODS = {'username', 'email'}  # Replaces ACCOUNT_AUTHENTICATION_METHOD
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']  # Replaces multiple settings
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True

LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# Django AllAuth UI settings
ALLAUTH_UI = {
    'THEME': 'bootstrap5',
    'FORMS_LAYOUT': 'horizontal',
    'FORMS_LABELS_POSITION': 'top',
    'FORMS_HELP_TEXT_POSITION': 'bottom',
    'FORMS_ERRORS_POSITION': 'bottom',
    'FORMS_BUTTONS_ALIGN': 'center',
    'FORMS_BUTTON_CLASS': 'btn-primary',
    'FORMS_BUTTON_SIZE': '',
    'FORMS_BUTTON_SHOW_ICON': True,
    'FORMS_INPUT_SIZE': '',
    'FORMS_SHOW_PASSWORD_FEEDBACK': True,
    'FORMS_SHOW_STRENGTH_METER': True,
    'FORMS_SHOW_REMEMBER_ME': True,
    'FORMS_SHOW_SIGNUP_LINK': True,
    'FORMS_SHOW_RESET_PASSWORD_LINK': True,
    'FORMS_SHOW_SOCIAL_LOGIN': True,
    'FORMS_SOCIAL_BUTTONS_ALIGN': 'center',
    'FORMS_SOCIAL_BUTTONS_STYLE': 'button',
    'FORMS_SOCIAL_BUTTONS_SIZE': '',
    'FORMS_SOCIAL_BUTTONS_SHOW_ICON': True,
    'FORMS_SOCIAL_BUTTONS_SHOW_TEXT': True,
    'USE_CUSTOM_TEMPLATES': True,  # Enable custom templates
}

# Bootstrap settings
BOOTSTRAP5 = {
    'theme_url': None,  # We'll handle theme switching in our templates
}