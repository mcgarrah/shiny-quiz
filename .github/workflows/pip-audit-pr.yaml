name: pip-audit pull request

# This workflow uses pip-audit to check for vulnerabilities in Python dependencies
# and automatically creates a pull request with fixes if any vulnerabilities are found.
#
# **Note**: If you have errors for PR (merge request) creation, you may need to:
#   1. Go to Settings > Actions > General
#   2. Under "Pull request workflows" enable "Allow GitHub Actions to create and approve pull requests"

on:
  # Runs weekly on Sundays at midnight UTC
  schedule:
    - cron: '0 0 * * 0'
  # Allows manual runs from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  pip-audit-fixes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Create virtual environment
      run: python -m venv .venv

    - name: Install dependencies for audit
      run: |
        source .venv/bin/activate
        pip install -r requirements.txt

    - name: Pin requirements to exact versions
      run: |
        source .venv/bin/activate
        python scripts/pin_requirements.py pin

    - name: Install pip-audit
      run: |
        source .venv/bin/activate
        pip install pip-audit

    - name: Perform pip-audit with fixes
      id: audit
      # Run pip-audit directly with --fix flag on pinned requirements
      run: |
        source .venv/bin/activate
        pip-audit --fix -o audit-output.txt -r requirements-pinned.txt || echo "exit_code=$?" >> $GITHUB_OUTPUT
        # Copy the potentially updated pinned requirements back to main requirements file
        cp requirements-pinned.txt requirements.txt
        # Remove the defunct pinned requirements file
        rm requirements-pinned.txt
      # The `continue-on-error` ensures the workflow continues to the next step
      # if a vulnerability was found and fixed, which triggers the non-zero exit code.
      continue-on-error: true

    - name: Convert fixed pinned requirements back to flexible versioning
      run: |
        source .venv/bin/activate
        # Convert requirements back to flexible versioning
        python scripts/pin_requirements.py unpin

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Read audit output
      id: audit_output
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        if [ -f audit-output.txt ]; then
          echo "audit_details<<EOF" >> $GITHUB_OUTPUT
          cat audit-output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "audit_details=No audit output file found" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request with fix
      # This step only runs if pip-audit made changes
      if: steps.changes.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v6
      continue-on-error: true
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'fix: Apply security fixes via pip-audit'
        title: 'Security updates from pip-audit'
        body: |
          This PR automatically applies security fixes found by `pip-audit`.
          It's generated by the `pip-audit-pr` GitHub Action.
          
          ---
          
          **Audit Results:**
          Changes Detected: ${{ steps.changes.outputs.has_changes }}
          Exit Code: ${{ steps.audit.outputs.exit_code }}
          
          **Audit Details:**
          ```
          ${{ steps.audit_output.outputs.audit_details }}
          ```
          
          ---
                    
        branch: 'automated-pip-audit-fixes'
        # Ensures a clean branch for the PR
        delete-branch: true
