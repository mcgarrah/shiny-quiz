# Generated by Django 5.2 on 2025-05-06 05:44

import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('essay', 'Essay')], default='multiple_choice', max_length=20)),
                ('text', django_ckeditor_5.fields.CKEditor5Field()),
                ('explanation', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Explanation shown after question is answered')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='EssayQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, help_text='Model answer for this essay question')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='essay_question', to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('random_order', models.BooleanField(default=False, help_text='Display questions in random order')),
                ('max_questions', models.IntegerField(default=0, help_text='0 = All questions')),
                ('answers_at_end', models.BooleanField(default=False, help_text='Show all answers at the end')),
                ('exam_paper', models.BooleanField(default=False, help_text='If yes, answers show after each question')),
                ('single_attempt', models.BooleanField(default=False, help_text='If yes, only one attempt is allowed')),
                ('pass_mark', models.FloatField(default=50, help_text='Percentage required to pass')),
                ('success_text', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Displayed if user passes')),
                ('fail_text', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Displayed if user fails')),
                ('draft', models.BooleanField(default=False, help_text='If yes, quiz is not displayed in the quiz list')),
                ('time_limit', models.IntegerField(default=0, help_text='Time limit in minutes (0 = no limit)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='quiz.category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_quizzes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'ordering': ['-created_at'],
                'permissions': [('view_sittings', 'Can view quiz results from users')],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quiz.quiz'),
        ),
        migrations.CreateModel(
            name='Sitting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_order', models.TextField(blank=True, default='')),
                ('question_list', models.TextField(blank=True, default='')),
                ('incorrect_questions', models.TextField(blank=True, default='')),
                ('current_score', models.IntegerField(default=0)),
                ('complete', models.BooleanField(default=False)),
                ('user_answers', models.TextField(blank=True, default='')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_sittings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_sittings', 'Can view quiz results from users')],
            },
        ),
        migrations.CreateModel(
            name='EssayAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='essay_answers', to='quiz.question')),
                ('sitting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='essay_answers', to='quiz.sitting')),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_progress', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='quiz.quiz')),
            ],
            options={
                'verbose_name_plural': 'Progress Records',
                'unique_together': {('user', 'quiz')},
            },
        ),
    ]
